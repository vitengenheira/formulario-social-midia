import streamlit as st
import pandas as pd
from fpdf import FPDF
from datetime import datetime

# ---- CONFIGURA√á√ÉO DA P√ÅGINA ----
st.set_page_config(page_title="Formul√°rio Social M√≠dia", layout="centered")

st.title("üì± Formul√°rio de In√≠cio - Social M√≠dia")
st.write("Preencha os dados abaixo para come√ßarmos a criar conte√∫dos incr√≠veis para suas redes!")

# ---- COLETA DE DADOS B√ÅSICOS ----
nome = st.text_input("Nome completo: ")
profissao = st.text_input("Profiss√£o: ")

# ---- LOGO ----
logo = st.radio("Voc√™ j√° tem uma logo?", ["Sim", "N√£o"])
detalhes_logo = ""
if logo == "N√£o":
    detalhes_logo = st.text_area("Como voc√™ gostaria da sua logo? (Iniciais, √≠cone, desenho...)")

# ---- PALETA DE CORES ----
st.write("## Escolha sua paleta de cores")

# Paletas pr√©-definidas
paletas = {
    "Moderna": ["#1F1F1F", "#E50914", "#F5F5F5"],
    "Elegante": ["#2C3E50", "#ECF0F1", "#8E44AD"],
    "Vibrante": ["#FF6B6B", "#FFD93D", "#6BCB77"],
    "Minimalista": ["#FFFFFF", "#DDDDDD", "#333333"]
}

escolhida = st.radio("Selecione uma paleta de cores:", list(paletas.keys()))

# Mostrar cores visualmente
st.write("### Visualiza√ß√£o da paleta:")
cores = paletas[escolhida]
cols = st.columns(len(cores))
for i, cor in enumerate(cores):
    with cols[i]:
        st.markdown(f'<div style="width: 100%%; height: 60px; background-color: {cor}; border: 1px solid #000;"></div>', unsafe_allow_html=True)
        st.caption(cor)

# Op√ß√£o personalizada
personalizada = st.checkbox("Quero sugerir uma paleta personalizada")
paleta_personalizada = ""
if personalizada:
    paleta_personalizada = st.text_input("Descreva as cores desejadas (ex: tons de azul com detalhes dourados)")

# ---- TIPOS DE CONTE√öDO ----
st.write("## Tipos de conte√∫do que voc√™ deseja:")
feed = st.checkbox("üì∑ Feed")
story = st.checkbox("üìñ Stories")
reels = st.checkbox("üé¨ Reels")

roteiro = ""
if reels:
    roteiro = st.radio("Sobre o Reels:", [
        "Quero que voc√™ edite e escreva o roteiro",
        "Eu gravo e voc√™ s√≥ edita"
    ])

recorrencia = st.selectbox("Com que frequ√™ncia voc√™ quer os posts?", [
    "1x por semana", "2x por semana", "3x por semana", "Diariamente", "Outro"
])

# ---- GERADOR DE PDF ----
def gerar_pdf(dados, nome_arquivo):
    pdf = FPDF()
    pdf.add_page()
    pdf.set_font("Arial", size=12)
    pdf.cell(200, 10, txt="Informa√ß√µes do Cliente - Social M√≠dia", ln=True, align="C")
    pdf.ln(10)

    for chave, valor in dados.items():
        texto = f"{chave}: {valor}"
        pdf.multi_cell(0, 10, txt=texto)

    pdf.output(nome_arquivo)

# ---- ENVIO DO FORMUL√ÅRIO ----
if st.button("Enviar formul√°rio"):
    data = datetime.now().strftime("%Y-%m-%d_%H-%M")
    nome_pdf = f"{nome.replace(' ', '')}{data}.pdf"

    dados = {
        "Nome": nome,
        "Profiss√£o": profissao,
        "Tem logo": logo,
        "Detalhes da logo": detalhes_logo,
        "Paleta escolhida": escolhida,
        "Cores da paleta": ", ".join(cores),
        "Paleta personalizada?": "Sim" if personalizada else "N√£o",
        "Descri√ß√£o personalizada": paleta_personalizada,
        "Feed": "Sim" if feed else "N√£o",
        "Stories": "Sim" if story else "N√£o",
        "Reels": "Sim" if reels else "N√£o",
        "Roteiro Reels": roteiro,
        "Recorr√™ncia": recorrencia
    }

    gerar_pdf(dados, nome_pdf)
    st.success("‚úÖ Formul√°rio enviado e PDF gerado com sucesso!")
    st.download_button("üìÑ Baixar PDF agora", data=open(nome_pdf, "rb").read(), file_name=nome_pdf, mime="application/pdf")